(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[293],{4876:function(e,l,t){Promise.resolve().then(t.bind(t,3694))},2104:function(e,l,t){"use strict";var n=t(7437);t(2265),l.Z=e=>{let{children:l}=e;return(0,n.jsx)("div",{className:"drop-shadow-sm p-4 px-6 rounded-md bg-white mb-4 dark:bg-gray-800 dark:text-white",children:l})}},3588:function(e,l,t){"use strict";var n=t(7437);t(2265);var s=t(2104),i=t(9054);t(9443);var r=t(3463);l.Z=e=>{let{heading:l="",description:t="",content:o="",cssCode:h,htmlCode:a,javascriptCode:d,children:c,isOpen:b,setIsOpen:m}=e;return(0,n.jsxs)(s.Z,{children:[(0,n.jsx)("div",{className:"cursor-pointer",onClick:()=>m(l===b?"":l),children:(0,n.jsx)("h3",{className:"font-bold capitalize",children:l})}),b===l&&(0,n.jsxs)("div",{className:"pt-5 border-t mt-5",children:[o&&(0,n.jsx)("div",{className:"mb-4",children:o}),h&&(0,n.jsxs)("div",{children:[(0,n.jsx)("h4",{className:"font-bold mb-2",children:"CSS Code"}),(0,n.jsx)("div",{className:"bg-[#2b2b2b] p-4 mb-5 rounded-md w-full overflow-auto",children:(0,n.jsx)(i.default,{className:"css overflow-auto text-sm",children:h})}),(0,n.jsx)("p",{className:"mb-4",children:t})]}),a&&(0,n.jsxs)("div",{children:[(0,n.jsx)("h4",{className:"font-bold mb-2",children:"HTML Code"}),(0,n.jsx)("div",{className:"bg-[#2b2b2b] p-4 mb-5 rounded-md w-full overflow-auto",children:(0,n.jsx)(i.default,{className:"html overflow-auto text-sm",children:a})})]}),c&&(0,n.jsxs)("div",{children:[(0,n.jsx)("h3",{className:"font-bold mb-2",children:"Preview"}),(0,n.jsx)("div",{className:"mb-5",children:(0,n.jsx)("div",{children:(0,r.ZP)(c)})})]})]})]})}},3694:function(e,l,t){"use strict";t.r(l);var n=t(7437),s=t(2265),i=t(3588);l.default=()=>{let[e,l]=(0,s.useState)("");return(0,n.jsxs)("div",{children:[(0,n.jsx)("h2",{className:"text-xl mb-3 py-3 font-bold",children:"CSS Syntax"}),(0,n.jsx)("h3",{className:"text-xl mb-4",children:"CSS can be written in three main ways:"}),(0,n.jsx)("div",{className:"order-1",children:[{heading:"Inline CSS",content:"Directly in the HTML element using the style attribute.",htmlCode:'<!DOCTYPE html>\n<html>\n<head>\n  <title>Inline CSS Example</title>\n</head>\n<body>\n  <p style="color: blue;">This is a blue text.</p>\n</body>\n</html>',previewCode:'<p style="color: blue;">This is a blue text.</p>'},{heading:"Internal CSS",content:"Within a <style> block inside the <head> section of the HTML document.",htmlCode:"<!DOCTYPE html>\n<html>\n<head>\n  <title>Internal CSS Example</title>\n  <style>\n    p { color: blue; }\n  </style>\n</head>\n<body>\n  <p>This is a blue text.</p>\n</body>\n</html>",previewCode:'<p style="color: blue;">This is a blue text.</p>'},{heading:"External CSS",content:"In a separate .css file linked to the HTML document using the <link> tag.",htmlCode:'<!DOCTYPE html>\n<html>\n<head>\n  <title>External CSS Example</title>\n  <link rel="stylesheet" href="styles.css" />\n</head>\n<body>\n  <p>This is a blue text.</p>\n</body>\n</html>',cssCode:"/* styles.css */\np { color: blue; }",previewCode:'<p style="color: blue;">This is a blue text.</p>'}].map((t,s)=>(0,n.jsx)(i.Z,{...t,setIsOpen:l,isOpen:e,children:t.previewCode},s))}),(0,n.jsx)("hr",{}),(0,n.jsx)("h3",{className:"text-xl my-4",children:"CSS Priority System"}),(0,n.jsx)("p",{className:"mb-4",children:'CSS follows a priority system, known as "specificity," to determine which styles are applied when multiple styles conflict. Here\'s an example illustrating how priority and overwrite work:'}),(0,n.jsx)("div",{className:"order-1",children:[{heading:"Inline CSS (highest priority)",content:"The text will be blue because inline CSS has the highest priority.",htmlCode:'<!DOCTYPE html>\n<html>\n<head>\n  <title>CSS Priority Example</title>\n  <style>\n    p { color: green; }\n  </style>\n</head>\n<body>\n  <p style="color: blue;">This text will be blue.</p>\n</body>\n</html>',previewCode:'<p style="color: blue;">This text will be blue.</p>'},{heading:"Internal CSS (medium priority)",content:"The text will be green because internal CSS has lower priority than inline CSS but higher than external CSS.",htmlCode:'<!DOCTYPE html>\n<html>\n<head>\n  <title>CSS Priority Example</title>\n  <link rel="stylesheet" href="styles.css" />\n  <style>\n    p { color: green; }\n  </style>\n</head>\n<body>\n  <p>This text will be green.</p>\n</body>\n</html>',cssCode:"/* styles.css */\np { color: red; }",previewCode:'<p style="color: green;">This text will be green.</p>'},{heading:"External CSS (lowest priority)",content:"The text will be blue because external CSS has the lowest priority.",htmlCode:'<!DOCTYPE html>\n<html>\n<head>\n  <title>CSS Priority Example</title>\n  <link rel="stylesheet" href="styles.css" />\n</head>\n<body>\n  <p style="color: blue;">This text will be blue.</p>\n</body>\n</html>',cssCode:"/* styles.css */\np { color: red; }",previewCode:'<p style="color: blue;">This text will be blue.</p>'},{heading:"Combining Inline, Internal and External CSS",content:"The text will be blue because inline CSS has the highest priority.",htmlCode:'<!DOCTYPE html>\n<html>\n<head>\n  <title>CSS Priority Example</title>\n  <link rel="stylesheet" href="styles.css" />\n  <style>\n    p { color: green; }\n  </style>\n</head>\n<body>\n  <p style="color: blue;">This text will be blue.</p>\n</body>\n</html>',cssCode:"/* styles.css */\np { color: red; }",previewCode:'<p style="color: blue;">This text will be blue.</p>'}].map((t,s)=>(0,n.jsx)(i.Z,{...t,setIsOpen:l,isOpen:e,children:t.previewCode},s))})]})}}},function(e){e.O(0,[658,98,971,23,744],function(){return e(e.s=4876)}),_N_E=e.O()}]);